---
driver:
  name: docker
  lang: 'en_US.UTF-8'
  cc_pattern: "<%= File.basename(Dir.pwd) %>"

provisioner:
  name: chef_solo

platforms:
  - name: centos-6
    driver:
      image: 'prebuild/centos-6:tomcat_cluster_pattern'
      dockerfile: test/platforms/centos-6/Dockerfile

suites:
  - name: db-primary-server
    driver:
      cc_role: 'db'
      cc_tag: 'primary'
    run_list:
      - role[db_setup]
      - role[db_configure]
      - role[db_deploy]
    attributes:
      cloudconductor:
        servers:
          ap_01:
            roles: 'web,ap'
            private_ip: '<%= ENV["ap_node_ip"] %>'
          primary_node:
            roles: 'db'
            private_ip: '<%= ENV["db_primary_ip"] %>'
          standby_node:
            roles: 'db'
            private_ip: '<%= ENV["db_standby_ip"] %>'
        applications:
          jpetstore:
            type: 'dynamic'
            protocol: 'http'
            url: 'https://s3-ap-northeast-1.amazonaws.com/cloudconductor-test/sources/public/jpetstore.war'
            parameters:
              migration:
                type: 'sql'
                url: 'https://s3-ap-northeast-1.amazonaws.com/cloudconductor-test/sources/public/jpetstore_postgres.sql'

  - name: db-standby-server
    driver:
      cc_role: 'db'
      cc_tag: 'standby'
      cc_primary_db: '<%= ENV["db_primary_ip"] %>'
    run_list:
      - role[db_setup]
      - role[db_configure]
      - role[db_deploy]
    attributes:
      cloudconductor:
        servers:
          ap_01:
            roles: 'web,ap'
            private_ip: '<%= ENV["ap_node_ip"] %>'
          primary_node:
            roles: 'db'
            private_ip: '<%= ENV["db_primary_ip"] %>'
          standby_node:
            roles: 'db'
            private_ip: '<%= ENV["db_standby_ip"] %>'
        applications:
          jpetstore:
            type: 'dynamic'
            protocol: 'http'
            url: 'https://s3-ap-northeast-1.amazonaws.com/cloudconductor-test/sources/public/jpetstore.war'
            parameters:
              migration:
                type: 'sql'
                url: 'https://s3-ap-northeast-1.amazonaws.com/cloudconductor-test/sources/public/jpetstore_postgres.sql'

  - name: web-ap-server
    driver:
      cc_role: 'web,ap'
      cc_primary_db: '<%= ENV["db_primary_ip"] %>'
    run_list:
      - role[web_setup]
      - role[ap_setup]
      - role[web_configure]
      - role[ap_configure]
      - role[web_deploy]
      - role[ap_deploy]
    attributes:
      cloudconductor:
        servers:
          ap_01:
            roles: 'web,ap'
            private_ip: '<%= ENV["ap_node_ip"] %>'
          primary_node:
            roles: 'db'
            private_ip: '<%= ENV["db_primary_ip"] %>'
          standby_node:
            roles: 'db'
            private_ip: '<%= ENV["db_standby_ip"] %>'
        applications:
          jpetstore:
            type: 'dynamic'
            protocol: 'http'
            url: 'https://s3-ap-northeast-1.amazonaws.com/cloudconductor-test/sources/public/jpetstore.war'
      yum:
        jpackage:
          mirrorlist: 'false'
          baseurl: 'http://mirrors.dotsrc.org/jpackage/6.0/generic/free'

  - name: lb-server
    driver:
      cc_role: 'lb'
    run_list:
      - role[lb_setup]
      - role[lb_configure]
      - role[lb_deploy]
    attributes:
      cloudconductor:
        servers:
          ap_01:
            roles: 'web,ap'
            private_ip: '<%= ENV["ap_node_ip"] %>'
      haproxy_part:
        pem_file:
          remote:
            url: 'https://s3-us-west-1.amazonaws.com/okamoto-cloudconductor/certificate/server.pem'
