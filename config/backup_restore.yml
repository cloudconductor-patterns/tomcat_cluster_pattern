db:
  paths:
    - path: /var/cloudconductor/backups/postgresql
      prepare_path: true
      schedule: "0 0 * * *"
      script:
        pre_backup: ! '(rm -rf /var/cloudconductor/backups/postgresql/*; primary_ip_address=`curl http://localhost:8500/v1/catalog/service/postgresql?tag=primary | jq ''.[] | .Address'' | sed -e ''s/[^"]*"\([^"]*\)".*/\1/''`; sudo -u postgres pg_basebackup -D /var/cloudconductor/backups/postgresql --xlog --verbose -h ${primary_ip_address} -U replication; sudo -u root chown -R amandabackup:disk /var/cloudconductor/backups/postgresql) >/dev/null 2>&1'
        post_restore: ! '(self_hostname=`hostname`; self_ip_address=`/usr/local/bin/consul members | egrep "^${self_hostname} " | awk ''{print $2}'' | awk -F: ''{print $1}''`; primary_ip_address=`curl http://localhost:8500/v1/catalog/service/postgresql?tag=primary | jq ''.[] | .Address'' | sed -e ''s/[^"]*"\([^"]*\)".*/\1/''`; primary_hostname=`curl http://localhost:8500/v1/catalog/service/postgresql?tag=primary | jq ''.[] | .Node'' | sed -e ''s/[^"]*"\([^"]*\)".*/\1/''`; restore_event_id=`curl -X GET http://localhost:8500/v1/event/list?name=restore | jq ''.[] | .ID'' | tail -n1 | sed -e ''s/[^"]*"\([^"]*\)".*/\1/''`; if [ "${self_ip_address}" == "${primary_ip_address}" ]; then sudo -u root service postgresql-9.4 stop; sudo -u root rm -rf /var/lib/pgsql/9.4/data; sudo -u root mv /var/cloudconductor/backups/postgresql /var/lib/pgsql/9.4/data; sudo -u root chown -R postgres:postgres /var/lib/pgsql/9.4/data; sudo -u root chmod 700 /var/lib/pgsql/9.4/data; sudo -u root mkdir -p /var/cloudconductor/backups/postgresql; sudo -u root chown amandabackup:disk /var/cloudconductor/backups/postgresql; sudo -u root chmod 777 /var/cloudconductor/backups/postgresql; sudo -u root service postgresql-9.4 start; else while true; do result=`curl http://localhost:8500/v1/kv/event/${restore_event_id}/${primary_hostname} | jq ''.[] | .Value'' | sed -e ''s/[^"]*"\([^"]*\)".*/\1/'' | base64 -d | jq ''.result'' | sed -e ''s/[^"]*"\([^"]*\)".*/\1/''`; if [ "${result}" == "null" ]; then sleep 10; continue; elif [ "${result}" == "0" ]; then break; else exit 1; fi; done; sudo -u root service postgresql-9.4 stop; sudo -u root rm -rf /var/cloudconductor/backups/postgresql; sudo -u root mkdir -p /var/cloudconductor/backups/postgresql; sudo -u root chown amandabackup:disk /var/cloudconductor/backups/postgresql; sudo -u root chmod 777 /var/cloudconductor/backups/postgresql; sudo -u postgres pg_basebackup -D /var/cloudconductor/backups/postgresql --xlog --verbose -h ${primary_ip_address} -U replication; sudo -u root rm -rf /var/lib/pgsql/9.4/data; sudo -u root mv /var/cloudconductor/backups/postgresql /var/lib/pgsql/9.4/data; sudo -u root chown -R postgres:postgres /var/lib/pgsql/9.4/data; sudo -u root chmod 700 /var/lib/pgsql/9.4/data; sudo -u root mkdir -p /var/cloudconductor/backups/postgresql; sudo -u root chown amandabackup:disk /var/cloudconductor/backups/postgresql; sudo -u root chmod 777 /var/cloudconductor/backups/postgresql; sudo -u root mv /var/lib/pgsql/9.4/data/recovery.done /var/lib/pgsql/9.4/data/recovery.conf; sudo -u root sed -ri "s/host=[^ ]+ /host=${primary_ip_address} /" /var/lib/pgsql/9.4/data/recovery.conf; sudo -u root service postgresql-9.4 start; fi) >/dev/null 2>&1'
      restore_enabled: true
  privileges:
    - user: postgres
      command: /usr/bin/pg_basebackup
    - user: root
      command: /bin/chmod
    - user: root
      command: /bin/chown
    - user: root
      command: /bin/mkdir
    - user: root
      command: /bin/mv
    - user: root
      command: /bin/rm
    - user: root
      command: /bin/sed
    - user: root
      command: /sbin/service
