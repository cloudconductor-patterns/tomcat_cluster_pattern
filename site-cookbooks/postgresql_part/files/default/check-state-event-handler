#!/bin/sh

NODE_NAME=$(curl -s http://localhost:8500/v1/agent/self | jq '.Config.NodeName' | sed -e 's/[^"]*"\([^"]*\)".*/\1/')

CHECK_ID="service:postgresql:check"

STDIN_DATA="$(cat /dev/stdin)"

echo '${NODE_NAME}'

STDIN_DATA=$(echo "${STDIN_DATA}" | jq "map(select(.Node == \"${NODE_NAME}\" and .CheckID == \"${CHECK_ID}\"))")

echo "${STDIN_DATA}" | jq '.'

STATUS=$(echo "${STDIN_DATA}" | jq '.[] | .Status' | sed -e 's/[^"]*"\([^"]*\)".*/\1/')

echo "${STDIN_DATA}" | jq '.'

append_primary_tag() {
    ALREADY_TAG=$(curl -s http://localhost:8500/v1/agent/services | jq '.postgresql | .Tags | map(select(. == "primary")) | length')

    if [ ${ALREADY_TAG} -eq 0 ] ; then
      curl -s http://localhost:8500/v1/agent/services | jq '.postgresql|{id:.ID,name:.Service,tags:(.Tags + ["primary"]),address:.Address,port:.Port}' | curl -s -XPUT http://localhost:8500/v1/agent/service/register -d @-
    fi

    FILE_DATA="$(cat /etc/consul.d/postgresql.json)"
    ALREADY_TAG=$(echo "${FILE_DATA}" | jq '.service | .tags | map(select(. == "primary")) | length')

    if [ ${ALREADY_TAG} -eq 0 ] ; then
      echo "${FILE_DATA}" | jq '.service | {name: .name, tags: (.tags + ["primary"]), address: .address, port: .port, checks: .checks} | {service: .}' > /etc/consul.d/postgresql.json
    fi
}

remove_primary_tag() {
  TAGS=$(curl -s http://localhost:8500/v1/agent/services | jq '.postgresql | .Tags ')

  if [ "$TAGS" != null ] ; then
    curl -s http://localhost:8500/v1/agent/services | jq '.postgresql|{id:.ID,name:.Service,tags:(.Tags - ["primary"]),address:.Address,port:.Port}' | curl -s -XPUT http://localhost:8500/v1/agent/service/register -d @-
  fi

  FILE_DATA="$(cat /etc/consul.d/postgresql.json)"
  TAGS=$(echo "${FILE_DATA}" | jq '.service | .tags ')

  if [ "$TAGS" != null ] ; then
    echo "${FILE_DATA}" | jq '.service | {name: .name, tags: (.tags - ["primary"]), address: .address, port: .port, checks: .checks} | {service: .}' > /etc/consul.d/postgresql.json
  fi
}

if [ "${STATUS}" = "passing" ] ; then
  ALREADY_EXISTS=$(curl http://localhost:8500/v1/catalog/services | jq '.postgresql | map(select(. == "primary")) | length')

  if [ ${ALREADY_EXISTS} -eq 0 ]; then
    stdout=$(ls /var/lib/pgsql/**/data/recovery.done)
    status=$?

    if [ ${status} -eq 0 ] ; then
      append_primary_tag
    fi
  fi
else
  remove_primary_tag
fi
